apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker
  namespace: finops-dashboard
  labels:
    app: celery-worker
    tier: worker
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: celery-worker
  template:
    metadata:
      labels:
        app: celery-worker
        tier: worker
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: celery-worker
        image: finops-dashboard:latest
        command: [ "celery", "-A", "finops_dashboard", "worker", "--loglevel=info", "--concurrency=4", "--max-tasks-per-child=1000" ]
        env:
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: DEBUG
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: finops-secrets
              key: SECRET_KEY
        - name: DATABASE_URL
          value: "postgresql://$(DATABASE_USER):$(DATABASE_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_NAME)"
        - name: DATABASE_USER
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: DATABASE_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: finops-secrets
              key: DATABASE_PASSWORD
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: DATABASE_PORT
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: DATABASE_NAME
        - name: CELERY_BROKER_URL
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: CELERY_BROKER_URL
        - name: CELERY_RESULT_BACKEND
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: CELERY_RESULT_BACKEND
        volumeMounts:
        - name: temp-volume
          mountPath: /tmp
        - name: app-temp-volume
          mountPath: /home/app/temp
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - celery
            - -A
            - finops_dashboard
            - inspect
            - ping
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 10
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: temp-volume
        emptyDir: {}
      - name: app-temp-volume
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-beat
  namespace: finops-dashboard
  labels:
    app: celery-beat
    tier: scheduler
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: celery-beat
  template:
    metadata:
      labels:
        app: celery-beat
        tier: scheduler
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: celery-beat
        image: finops-dashboard:latest
        command: [ "celery", "-A", "finops_dashboard", "beat", "--loglevel=info", "--scheduler", "django_celery_beat.schedulers:DatabaseScheduler" ]
        env:
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: DEBUG
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: finops-secrets
              key: SECRET_KEY
        - name: DATABASE_URL
          value: "postgresql://$(DATABASE_USER):$(DATABASE_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_NAME)"
        - name: DATABASE_USER
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: DATABASE_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: finops-secrets
              key: DATABASE_PASSWORD
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: DATABASE_PORT
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: DATABASE_NAME
        - name: CELERY_BROKER_URL
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: CELERY_BROKER_URL
        - name: CELERY_RESULT_BACKEND
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: CELERY_RESULT_BACKEND
        volumeMounts:
        - name: temp-volume
          mountPath: /tmp
        - name: app-temp-volume
          mountPath: /home/app/temp
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: temp-volume
        emptyDir: {}
      - name: app-temp-volume
        emptyDir: {}
