apiVersion: apps/v1
kind: Deployment
metadata:
  name: finops-web
  namespace: finops-dashboard
  labels:
    app: finops-web
    tier: frontend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: finops-web
  template:
    metadata:
      labels:
        app: finops-web
        tier: frontend
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
      - name: migrate
        image: finops-dashboard:latest
        command: [ "python", "manage.py", "migrate", "--noinput" ]
        env:
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: DEBUG
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: finops-secrets
              key: SECRET_KEY
        - name: DATABASE_URL
          value: "postgresql://$(DATABASE_USER):$(DATABASE_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_NAME)"
        - name: DATABASE_USER
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: DATABASE_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: finops-secrets
              key: DATABASE_PASSWORD
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: DATABASE_PORT
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: DATABASE_NAME
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: temp-volume
          mountPath: /tmp
      containers:
      - name: finops-web
        image: finops-dashboard:latest
        ports:
        - containerPort: 8000
        env:
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: DEBUG
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: finops-secrets
              key: SECRET_KEY
        - name: ALLOWED_HOSTS
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: ALLOWED_HOSTS
        - name: DATABASE_URL
          value: "postgresql://$(DATABASE_USER):$(DATABASE_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_NAME)"
        - name: DATABASE_USER
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: DATABASE_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: finops-secrets
              key: DATABASE_PASSWORD
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: DATABASE_PORT
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: DATABASE_NAME
        - name: CELERY_BROKER_URL
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: CELERY_BROKER_URL
        - name: CELERY_RESULT_BACKEND
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: CELERY_RESULT_BACKEND
        - name: SECURE_SSL_REDIRECT
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: SECURE_SSL_REDIRECT
        - name: SESSION_COOKIE_SECURE
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: SESSION_COOKIE_SECURE
        - name: CSRF_COOKIE_SECURE
          valueFrom:
            configMapKeyRef:
              name: finops-config
              key: CSRF_COOKIE_SECURE
        volumeMounts:
        - name: static-files
          mountPath: /home/app/staticfiles
        - name: media-files
          mountPath: /home/app/media
        - name: temp-volume
          mountPath: /tmp
        - name: app-temp-volume
          mountPath: /home/app/temp
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health/
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: static-files
        persistentVolumeClaim:
          claimName: static-files-pvc
      - name: media-files
        persistentVolumeClaim:
          claimName: media-files-pvc
      - name: temp-volume
        emptyDir: {}
      - name: app-temp-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: finops-web-service
  namespace: finops-dashboard
  labels:
    app: finops-web
    tier: frontend
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
  selector:
    app: finops-web
